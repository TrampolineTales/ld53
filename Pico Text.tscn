[gd_scene load_steps=3 format=2]

[ext_resource path="res://PICO-8.tres" type="DynamicFont" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends RichTextLabel

var dont_remove = false
var hyperlink
var active = true
var hovering = false
var background
var color
var hover_color
var delay = 0

var selectable = true
var off_screen = false
var cant_go_dirs = []
var selector_alignment = \"dont\"

func _input(event):
	if hovering and event is InputEventMouseButton and event.is_pressed() and event.button_index == BUTTON_LEFT and not $\"/root/Main\".lmb_down:
		press()

func _free_if_orphaned():
	if not is_inside_tree():
		queue_free()

func _init():
	if not Utils.is_connected(\"freeing_orphans\", self, \"_free_if_orphaned\"):
		Utils.connect(\"freeing_orphans\", self, \"_free_if_orphaned\")
	add_font_override(\"font\", preload(\"res://PICO-8.tres\"))
	
func _ready():
	background = $\"Background\"
	hover_color = color
	hover_color.v += 0.2
	
	var mod = rect_scale.x * 4.0
	
	if $\"/root/Main/Options Sprite/Options\".CJK_lang or get_parent().get_parent().forced_font != null or int($\"/root/Main/Options Sprite/Options\".display_font) > 0:
		if get_parent().get_parent().forced_font != null:
			add_font_override(\"font\", get_parent().get_parent().forced_font)
		background.rect_size = Vector2(get_font(\"font\").get_string_size(text).x / 2 * (2 * get_parent().rect_scale.x) + mod, get_font(\"font\").get_height())
	else:
		if get_parent().forced_font != null:
			add_font_override(\"font\", get_parent().forced_font)
		background.rect_size = Vector2(get_font(\"font\").get_string_size(text).x / 2 * (2 * get_parent().rect_scale.x) + mod, get_font(\"font\").get_height())
	
	var h_num = get_parent().get_children().find(self)
	var hls = get_parent().get_parent().hyperlinks
	if h_num != -1 and hls.size() > h_num:
		hyperlink = hls[h_num]
		$\"/root/Main/Options Sprite/Options\".hyperlinks.push_back(self)

func update():
	if delay <= 0:
		if hyperlink != null:
			if is_inside_tree() and $\"/root/Main\".selected_node != null and $\"/root/Main\".selected_node == self and OS.is_window_focused() and $\"/root/Main/Selector Sprite/Selector\".visible:
				if $\"/root/Main\".down_keys[\"confirm_select\"] == 1:
					$\"/root/Main\".down_keys[\"confirm_select\"] += 1
					if not $\"/root/Main/Selector Sprite/Selector\".visible:
						$\"/root/Main/Selector Sprite/Selector\".visible = true
					else:
						press()
				elif $\"/root/Main\".down_keys[\"up\"] == 1 or $\"/root/Main\".down_keys[\"down\"] == 1:
					var h_tbe = []
					var num = 0
					for h in $\"/root/Main/Options Sprite/Options\".hyperlinks:
						if not is_instance_valid(h):
							h_tbe.push_back(num)
						num += 1
					for h in range(h_tbe.size()):
						$\"/root/Main/Options Sprite/Options\".hyperlinks.remove(h_tbe[h] - h)
					h_tbe.clear()
			selector_alignment = \"hyperlink\"
			if is_inside_tree() and not $\"/root/Main/Selector Sprite/Selector\".visible:
				if active and (hovering and (not OS.is_window_focused() or ((get_global_mouse_position().x < rect_global_position.x - 4 or get_global_mouse_position().x > rect_global_position.x - 4 + background.rect_size.x * rect_scale.x or get_global_mouse_position().y < rect_global_position.y + 2 or get_global_mouse_position().y > rect_global_position.y - 4 + background.rect_size.y * get_parent().rect_scale.y))) or not OS.is_window_focused()) and visible:
					hovering = false
					add_color_override(\"default_color\", color)
				elif active and not hovering and OS.is_window_focused() and ((not (get_global_mouse_position().x < rect_global_position.x - 4 or get_global_mouse_position().x > rect_global_position.x - 4 + background.rect_size.x * rect_scale.x or get_global_mouse_position().y < rect_global_position.y + 2 or get_global_mouse_position().y > rect_global_position.y - 4 + background.rect_size.y * get_parent().rect_scale.y))) and visible and get_parent().get_parent().rect_position.y > -8:
					hovering = true
					add_color_override(\"default_color\", hover_color)
	if not OS.is_window_focused():
		delay = 3
		hovering = false
	elif delay != 0:
		delay -= 1

func press():
	if hyperlink != null and OS.is_window_focused() and visible and $\"/root/Main/Options Sprite/Options\".visible:
		OS.shell_open(hyperlink)
"

[node name="Pico Text" type="RichTextLabel" groups=["Pause Update", "Selectable"]]
anchor_right = 1.0
anchor_bottom = 1.0
rect_clip_content = false
mouse_filter = 2
custom_fonts/normal_font = ExtResource( 1 )
scroll_active = false
script = SubResource( 1 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Background" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true
}
